// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  userId   Int      @id @default(autoincrement())
  username String   @unique
  password String
  name     String
  email    String   @unique
  phone    String   @unique
  token    String?   @unique
  profilePicture String?
  isActive Boolean  @default(true)
  deletedAt DateTime?
  history  UserHistory[]  // One-to-many relationship with UserHistory

  @@map("users")
  @@index([email])
  @@index([username])
}

model UserHistory {
  userHistoryId Int      @id @default(autoincrement())  // Primary key for history entries
  updatedAt     DateTime @default(now())                // Timestamp of the change
  description   String   // Description of the change/action
  userId        Int      // Foreign key to User
  user          User     @relation(fields: [userId], references: [userId])  // Relationship with User

  @@map("user_histories")
  @@index([userId])  // Index for quick lookups based on userId
}

model Distributor{
  distributorId Int @id @default(autoincrement())
  distributorName String 
  distributorPhone String?
  distributorEmail String? 
  distributorEcommerceLink String? 
  distributorProfilePicture String?
  history DistributorHistory []
  isDistributorDeleted Boolean @default(false)
  isDistributorActive Boolean @default(true)

  @@map("distributor")
  @@index([distributorId])
  Warehouse Warehouse[]
}

model DistributorHistory{
  distributorHistoryId Int @id @default(autoincrement())
  updatedAt DateTime? @default(now())
  description String?
  distributorId Int
  distributor Distributor @relation(fields: [distributorId], references: [distributorId], onDelete: Cascade)

  @@map("distributor_history")
  @@index([distributorHistoryId])
}

model Category{
  categoryId Int @id @default(autoincrement())
  categoryName String
  @@map("category")
  @@index([categoryId])

  Warehouse Warehouse[]
}

model Warehouse{
  productId Int @id @default(autoincrement())
  dateAdded DateTime? @default(now())
  distributorId Int
  distributor Distributor @relation(fields: [distributorId], references: [distributorId])
  productName String 
  productPrice Decimal 
  percentProfit Decimal
  productStock Int
  categoryId Int
  category Category @relation(fields: [categoryId], references: [categoryId])

  WarehouseHistory WarehouseHistory[]

  @@map("warehouse")
  @@index([productId])
}

model WarehouseHistory{
  warehouseHistoryId Int @id @default(autoincrement())
  updatedAt DateTime? @default(now())
  description String?
  productId Int
  product Warehouse @relation(fields: [productId], references: [productId])
  @@map("warehouse_history")
  @@index([warehouseHistoryId])
}



